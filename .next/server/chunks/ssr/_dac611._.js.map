{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,OAAO,iKAAc,IAAI;AAE/B,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,IAAI;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,qHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,iKAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,qHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,qHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline'\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10'\n      }\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default'\n    }\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n  formAction?: any;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAUF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,qHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils/utils';\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = 'Input';\n\nexport { Input };\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,qHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/datetimepicker.tsx"],"sourcesContent":["\nimport React from \"react\";\nimport \"react-datetime/css/react-datetime.css\";\nimport Datetime from \"react-datetime\";\n\nimport { Calendar } from 'lucide-react';\n\nimport { Input } from '@/components/ui/input';\n\ninterface Props {\n    size: number,\n    value: Date,\n    timeDisplay: boolean;\n    onChange: any;\n}\n\ninterface State {\n    valueDate: Date\n  }\n\nclass DateTimePicker extends React.Component<Props, State> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            valueDate: this.props.value\n        };\n    }\n\n    render() {\n\n        const onDateChange = (date: any) => {\n            this.setState({ valueDate: date });\n        };\n\n        let inputProps = {\n            size: this.props.size,\n        };\n\n        return <Datetime \n                    dateFormat=\"DD/MM/YYYY\" \n                    closeOnSelect={true} \n                    timeFormat={this.props.timeDisplay} \n                    inputProps={inputProps} \n                    renderInput={this.renderInput} \n                    value={this.props.value} \n                    onChange={(val: any) => this.props.onChange(val)} />;\n    }\n\n    renderInput(props: any, openCalendar: any, closeCalendar: any) {\n        // function toogleClander() {\n        //     if(this.state.isOpen) {\n        //         this.setState({ isOpen: false });\n        //         closeCalendar();\n        //     } else{\n        //         this.setState({ isOpen: true });\n        //         openCalendar();\n        //     }\n        // }\n        return (\n            <div className=\"relative h-10 w-full\">\n                <Input type=\"text\"\n                    {...props}\n                    className=\"text-gray-500 font-medium text-sm bg-gray-100 file:cursor-pointer cursor-pointer file:border-0 file:py-2 file:px-4 file:mr-4 file:bg-gray-800 file:hover:bg-gray-700 file:text-white rounded\"\n                />\n                <Calendar className=\"absolute h-5 w-5 right-3 top-1/2 transform -translate-y-1/2 text-gray-500 z-10 cursor-pointer\"\n                    onClick={openCalendar} />\n            </div>\n        );\n    }\n}\n\nexport { DateTimePicker };"],"names":[],"mappings":";;;;AACA;AAEA;AAIA;AAFA;;;;;;;AAeA,MAAM,uBAAuB,qMAAA,CAAA,UAAK,CAAC,SAAS;IAExC,YAAY,KAAU,CAAE;QACpB,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,GAAG;YACT,WAAW,IAAI,CAAC,KAAK,CAAC,KAAK;QAC/B;IACJ;IAEA,SAAS;QAEL,MAAM,eAAe,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC;gBAAE,WAAW;YAAK;QACpC;QAEA,IAAI,aAAa;YACb,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI;QACzB;QAEA,qBAAO,8OAAC,qKAAA,CAAA,UAAQ;YACJ,YAAW;YACX,eAAe;YACf,YAAY,IAAI,CAAC,KAAK,CAAC,WAAW;YAClC,YAAY;YACZ,aAAa,IAAI,CAAC,WAAW;YAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;YACvB,UAAU,CAAC,MAAa,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;;;;;;IAC5D;IAEA,YAAY,KAAU,EAAE,YAAiB,EAAE,aAAkB,EAAE;QAC3D,6BAA6B;QAC7B,8BAA8B;QAC9B,4CAA4C;QAC5C,2BAA2B;QAC3B,cAAc;QACd,2CAA2C;QAC3C,0BAA0B;QAC1B,QAAQ;QACR,IAAI;QACJ,qBACI,8OAAC;YAAI,WAAU;;8BACX,8OAAC,0HAAA,CAAA,QAAK;oBAAC,MAAK;oBACP,GAAG,KAAK;oBACT,WAAU;;;;;;8BAEd,8OAAC,0MAAA,CAAA,WAAQ;oBAAC,WAAU;oBAChB,SAAS;;;;;;;;;;;;IAGzB;AACJ"}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/data/dbconfig.ts"],"sourcesContent":["export const DBConfig = {\n    name: \"docs_digitization\",\n    version: 1,\n    invoiceTable: \"invoice-table\",\n  };"],"names":[],"mappings":";;;AAAO,MAAM,WAAW;IACpB,MAAM;IACN,SAAS;IACT,cAAc;AAChB"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/hooks/useIndexedDB.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { DBConfig } from \"@/lib/data/dbconfig\";\n\n// Interface defining the return type for useIndexedDB hook\ninterface UseIndexedDBResult {\n  getValue: (tableName: string, id: number) => Promise<any>;\n  getAllValue: (tableName: string) => Promise<any[]>;\n  putValue: (tableName: string, value: object) => Promise<IDBValidKey | null>;\n  putBulkValue: (tableName: string, values: object[]) => Promise<any[]>;\n  updateValue: (params: {\n    tableName: string;\n    id: number;\n    newItem: any;\n  }) => void;\n  deleteValue: (tableName: string, id: number) => number | null;\n  deleteAll: (tableName: string) => void;\n  isDBConnecting: boolean;\n}\n\nexport const useIndexedDB = (\n  databaseName: string,\n  tableNames: string[]\n): UseIndexedDBResult => {\n  const [db, setDB] = useState<IDBDatabase | null>(null);\n  const [isDBConnecting, setIsDBConnecting] = useState<boolean>(true);\n\n  useEffect(() => {\n    const initDB = () => {\n      const request = indexedDB.open(databaseName, DBConfig.version);\n\n      // Handle database upgrade\n      request.onupgradeneeded = () => {\n        const database = request.result;\n        tableNames.forEach((tableName) => {\n          if (!database.objectStoreNames.contains(tableName)) {\n            database.createObjectStore(tableName, {\n              autoIncrement: true,\n              keyPath: \"id\",\n            });\n          }\n        });\n      };\n\n      // Handle successful database connection\n      request.onsuccess = () => {\n        setDB(request.result);\n        setIsDBConnecting(false);\n      };\n\n      // Handle errors in database connection\n      request.onerror = () => {\n        console.error(\"Error initializing IndexedDB:\", request.error);\n        setIsDBConnecting(false);\n      };\n    };\n\n    if (!db) {\n      initDB();\n    }\n  }, [databaseName, tableNames, db]);\n\n  // Helper function to get a transaction for a specific table\n  const getTransaction = (tableName: string, mode: IDBTransactionMode) => {\n    if (!db) throw new Error(\"Database is not initialized\");\n    return db.transaction(tableName, mode).objectStore(tableName);\n  };\n\n  // Function to get a specific value from the table by ID\n  const getValue = useCallback(\n    (tableName: string, id: number): Promise<any> => {\n      return new Promise((resolve, reject) => {\n        try {\n          const store = getTransaction(tableName, \"readonly\");\n          const request = store.get(id);\n          request.onsuccess = () => resolve(request.result);\n          request.onerror = () => reject(request.error);\n        } catch (error) {\n          reject(error);\n        }\n      });\n    },\n    [db]\n  );\n\n  // Function to get all values from a specific table\n  const getAllValue = (tableName: string): Promise<any[]> => {\n    return new Promise((resolve, reject) => {\n      try {\n        const store = getTransaction(tableName, \"readonly\");\n        const request = store.getAll();\n        request.onsuccess = () => resolve(request.result);\n        request.onerror = () => reject(request.error);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n\n  // Function to insert or update a single value in a specific table\n  const putValue = (\n    tableName: string,\n    value: object\n  ): Promise<IDBValidKey | null> => {\n    return new Promise((resolve, reject) => {\n      try {\n        const store = getTransaction(tableName, \"readwrite\");\n        const request = store.put(value);\n        request.onsuccess = () => resolve(request.result);\n        request.onerror = () => reject(request.error);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n\n  // Function to insert or update multiple values in a specific table\n  const putBulkValue = async (\n    tableName: string,\n    values: object[]\n  ): Promise<any[]> => {\n    try {\n      const store = getTransaction(tableName, \"readwrite\");\n      values.forEach((value) => store.put(value));\n      return getAllValue(tableName);\n    } catch (error) {\n      throw new Error(\"Bulk insert failed: \" + error);\n    }\n  };\n\n  // Function to update a specific value by ID in a specific table\n  const updateValue = ({\n    tableName,\n    id,\n    newItem,\n  }: {\n    tableName: string;\n    id: number;\n    newItem: any;\n  }) => {\n    try {\n      const store = getTransaction(tableName, \"readwrite\");\n      const request = store.get(id);\n      request.onsuccess = () => {\n        const data = request.result;\n        const updatedItem = data ? { ...data, ...newItem } : { id, newItem };\n        store.put(updatedItem);\n      };\n    } catch (error) {\n      console.error(\"Update value failed: \", error);\n    }\n  };\n\n  // Function to delete a specific value by ID from a specific table\n  const deleteValue = (tableName: string, id: number): number | null => {\n    try {\n      const store = getTransaction(tableName, \"readwrite\");\n      store.delete(id);\n      return id;\n    } catch (error) {\n      console.error(\"Delete value failed: \", error);\n      return null;\n    }\n  };\n\n  // Function to delete all values from a specific table\n  const deleteAll = (tableName: string) => {\n    try {\n      const store = getTransaction(tableName, \"readwrite\");\n      store.clear();\n    } catch (error) {\n      console.error(\"Delete all values failed: \", error);\n    }\n  };\n\n  return {\n    getValue,\n    getAllValue,\n    putValue,\n    putBulkValue,\n    updateValue,\n    deleteValue,\n    deleteAll,\n    isDBConnecting,\n  };\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/hooks/hooks.ts"],"sourcesContent":["// This file serves as a central hub for re-exporting pre-typed Redux hooks.\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\nimport type { AppDispatch, AppStore, RootState } from \"../store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = useDispatch.withTypes<AppDispatch>();\nexport const useAppSelector = useSelector.withTypes<RootState>();\nexport const useAppStore = useStore.withTypes<AppStore>();\n"],"names":[],"mappings":"AAAA,4EAA4E;;;;;;AAC5E;;AAIO,MAAM,iBAAiB,yJAAA,CAAA,cAAW,CAAC,SAAS;AAC5C,MAAM,iBAAiB,yJAAA,CAAA,cAAW,CAAC,SAAS;AAC5C,MAAM,cAAc,yJAAA,CAAA,WAAQ,CAAC,SAAS"}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}