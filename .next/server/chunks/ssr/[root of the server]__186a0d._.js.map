{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/tabs.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx <module evaluation>\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,wDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wDACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wDACA"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/tabs.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,oCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,oCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oCACA"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/services/unicorn_companies.ts"],"sourcesContent":["import axiosInstance from '../../app/api/axios'; \nimport { UnicornCompanies } from '../models/unicorn_companies';\n\nexport async function getPageData(\n    pageno: number = 1\n  ) : Promise<{\n    companyList: UnicornCompanies[];\n    pageNo: number;\n    newOffset: number;\n    totalItems: number;\n  }>  {  \n  \n    let response: any, unicorn_companies: any;\n    try {  \n      response = await axiosInstance.get(\"/api/unicorncompanies/pages\", { params: { 'page[pageno]': pageno } });\n    //   console.log(\"RESPONSE >> \", response?.data);\n      unicorn_companies = parseAllObjects<UnicornCompanies>(response.data.data.data);\n    } catch (error) {  \n      // Handle the error here  \n      console.error(error);  \n    }  \n  \n    return {\n      companyList: unicorn_companies,\n      pageNo: response?.data.data.pageInfo.page,\n      newOffset: response?.data.data.pageInfo.pageSize,\n      totalItems: response?.data.data.pageInfo.totalRowCount\n    };\n  };\n\n  export async function  getAllData(){  \n    try {  \n      const response = await axiosInstance.get(\"/api/unicorncompanies\");\n      let unicorn_companies = parseAllObjects<UnicornCompanies>(response.data.data);\n      return unicorn_companies;\n    } catch (error) {  \n      // Handle the error here  \n      console.error(error);  \n    }  \n  };\n  \n  function parseAllObjects<T>(json: any): T[] | null {\n    try {\n      const jsonString = JSON.stringify(json);\n      return JSON.parse(jsonString) as T[];\n    } catch (error) {\n      console.error(\"Error parsing JSON:\", error);\n      return null;\n    }\n  }\n  "],"names":[],"mappings":";;;;;;;;;;AAGO,eAAe,YAClB,SAAiB,CAAC;IAQlB,IAAI,UAAe;IACnB,IAAI;QACF,WAAW,MAAM,cAAc,GAAG,CAAC,+BAA+B;YAAE,QAAQ;gBAAE,gBAAgB;YAAO;QAAE;QACzG,iDAAiD;QAC/C,oBAAoB,gBAAkC,SAAS,IAAI,CAAC,IAAI,CAAC,IAAI;IAC/E,EAAE,OAAO,OAAO;QACd,0BAA0B;QAC1B,QAAQ,KAAK,CAAC;IAChB;IAEA,OAAO;QACL,aAAa;QACb,QAAQ,UAAU,KAAK,KAAK,SAAS;QACrC,WAAW,UAAU,KAAK,KAAK,SAAS;QACxC,YAAY,UAAU,KAAK,KAAK,SAAS;IAC3C;AACF;AAEO,eAAgB;IACrB,IAAI;QACF,MAAM,WAAW,MAAM,cAAc,GAAG,CAAC;QACzC,IAAI,oBAAoB,gBAAkC,SAAS,IAAI,CAAC,IAAI;QAC5E,OAAO;IACT,EAAE,OAAO,OAAO;QACd,0BAA0B;QAC1B,QAAQ,KAAK,CAAC;IAChB;AACF;AAEA,SAAS,gBAAmB,IAAS;IACnC,IAAI;QACF,MAAM,aAAa,KAAK,SAAS,CAAC;QAClC,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO;IACT;AACF"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/(dashboard)/companies-table.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CompaniesTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call CompaniesTable() from the server but CompaniesTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(dashboard)/companies-table.tsx <module evaluation>\",\n    \"CompaniesTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,qEACA"}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/(dashboard)/companies-table.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CompaniesTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call CompaniesTable() from the server but CompaniesTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(dashboard)/companies-table.tsx\",\n    \"CompaniesTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,iDACA"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/(dashboard)/page.tsx"],"sourcesContent":["import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { File, PlusCircle } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\n\nimport { getAllData, getPageData } from '../../src/services/unicorn_companies'\n\nimport { CompaniesTable } from './companies-table';\n\nexport default async function ProductsPage(\n  props: {\n    searchParams: Promise<{ q: string; offset: string, currentPageNo: number }>;\n  }\n) {\n\n  const searchParams = await props.searchParams;\n  const search = searchParams.q ?? '';\n  const currentPageNo = searchParams.currentPageNo ?? 1;\n\n\n  const { companyList, pageNo, newOffset, totalItems } = await getPageData(currentPageNo);\n  console.log(\"RESPONSE COMPANY >> \", companyList[0].company);\n\n  return (\n    <Tabs defaultValue=\"all\">\n      <div className=\"flex items-center\">\n        {/* <TabsList>\n          <TabsTrigger value=\"all\">All</TabsTrigger>\n          <TabsTrigger value=\"active\">Active</TabsTrigger>\n          <TabsTrigger value=\"draft\">Draft</TabsTrigger>\n          <TabsTrigger value=\"archived\" className=\"hidden sm:flex\">\n            Archived\n          </TabsTrigger>\n        </TabsList> */}\n        {/* <div className=\"ml-auto flex items-center gap-2\">\n          <Button size=\"sm\" variant=\"outline\" className=\"h-8 gap-1\">\n            <File className=\"h-3.5 w-3.5\" />\n            <span className=\"sr-only sm:not-sr-only sm:whitespace-nowrap\">\n              Export\n            </span>\n          </Button>\n          <Button size=\"sm\" className=\"h-8 gap-1\">\n            <PlusCircle className=\"h-3.5 w-3.5\" />\n            <span className=\"sr-only sm:not-sr-only sm:whitespace-nowrap\">\n              Add Product\n            </span>\n          </Button>\n        </div> */}\n      </div>\n      <TabsContent value=\"all\">\n          <CompaniesTable \n            companies={companyList}\n            currentPageNo={pageNo}\n            offset={newOffset*pageNo}\n            totalItems={totalItems}\n            />\n      </TabsContent>\n    </Tabs>\n  );\n}\n\n"],"names":[],"mappings":";;;;AAAA;AAIA;AAEA;;;;;AAEe,eAAe,aAC5B,KAEC;IAGD,MAAM,eAAe,MAAM,MAAM,YAAY;IAC7C,MAAM,SAAS,aAAa,CAAC,IAAI;IACjC,MAAM,gBAAgB,aAAa,aAAa,IAAI;IAGpD,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,MAAM,CAAA,GAAA,oIAAA,CAAA,cAAW,AAAD,EAAE;IACzE,QAAQ,GAAG,CAAC,wBAAwB,WAAW,CAAC,EAAE,CAAC,OAAO;IAE1D,qBACE,8OAAC,yHAAA,CAAA,OAAI;QAAC,cAAa;;0BACjB,8OAAC;gBAAI,WAAU;;;;;;0BAwBf,8OAAC,yHAAA,CAAA,cAAW;gBAAC,OAAM;0BACf,cAAA,8OAAC,2IAAA,CAAA,iBAAc;oBACb,WAAW;oBACX,eAAe;oBACf,QAAQ,YAAU;oBAClB,YAAY;;;;;;;;;;;;;;;;;AAKxB"}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/.next-internal/server/app/(dashboard)/page/actions.js"],"sourcesContent":["__turbopack_export_value__({\n});"],"names":[],"mappings":"AAAA,2BAA2B,CAC3B"}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}