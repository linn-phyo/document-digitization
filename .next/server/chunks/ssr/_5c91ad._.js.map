{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/src/utils/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,OAAO,iKAAc,IAAI;AAE/B,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,IAAI;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,qHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,iKAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,qHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,qHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/src/utils/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline'\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10'\n      }\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default'\n    }\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n  formAction?: any;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAUF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,qHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/app.slice.ts"],"sourcesContent":["import { asyncThunkCreator, buildCreateSlice } from \"@reduxjs/toolkit\";\n\n// `buildCreateSlice` allows us to create a slice with async thunks.\nexport const createAppSlice = buildCreateSlice({\n  creators: { asyncThunk: asyncThunkCreator },\n});\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,iBAAiB,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAAE;IAC7C,UAAU;QAAE,YAAY,2LAAA,CAAA,oBAAiB;IAAC;AAC5C"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/features/document_ocr/document.slice.ts"],"sourcesContent":["import { createAppSlice } from \"@/lib/app.slice\";\nimport type { AppThunk } from \"@/lib/store\";\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\nimport { devNull } from \"os\";\n\nexport interface DocumentOCRState {\n  file: any;\n  status: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: DocumentOCRState = {\n  file: null,\n  status: \"idle\",\n};\n\n// If you are not using async thunks you can use the standalone `createSlice`.\nexport const documentSlice = createAppSlice({\n  name: \"document\",\n  // `createSlice` will infer the state type from the `initialState` argument\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: (create) => ({\n    upload: create.reducer((state, file) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.file = file.payload;\n    }),\n  }),\n  // You can define your selectors here. These selectors receive the slice\n  // state as their first argument.\n  selectors: {\n    selectFile: (document) => document.file,\n    selectStatus: (document) => document.status,\n  },\n});\n\n// Action creators are generated for each case reducer function.\nexport const { upload } =\ndocumentSlice.actions;\n\n// Selectors returned by `slice.selectors` take the root state as their first argument.\nexport const { selectFile, selectStatus } = documentSlice.selectors;"],"names":[],"mappings":";;;;;;AAAA;;AAUA,MAAM,eAAiC;IACrC,MAAM;IACN,QAAQ;AACV;AAGO,MAAM,gBAAgB,CAAA,GAAA,mHAAA,CAAA,iBAAc,AAAD,EAAE;IAC1C,MAAM;IACN,2EAA2E;IAC3E;IACA,+EAA+E;IAC/E,UAAU,CAAC,SAAW,CAAC;YACrB,QAAQ,OAAO,OAAO,CAAC,CAAC,OAAO;gBAC7B,oEAAoE;gBACpE,uEAAuE;gBACvE,oEAAoE;gBACpE,0CAA0C;gBAC1C,MAAM,IAAI,GAAG,KAAK,OAAO;YAC3B;QACF,CAAC;IACD,wEAAwE;IACxE,iCAAiC;IACjC,WAAW;QACT,YAAY,CAAC,WAAa,SAAS,IAAI;QACvC,cAAc,CAAC,WAAa,SAAS,MAAM;IAC7C;AACF;AAGO,MAAM,EAAE,MAAM,EAAE,GACvB,cAAc,OAAO;AAGd,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,cAAc,SAAS"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/hooks/hooks.ts"],"sourcesContent":["// This file serves as a central hub for re-exporting pre-typed Redux hooks.\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\nimport type { AppDispatch, AppStore, RootState } from \"../store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = useDispatch.withTypes<AppDispatch>();\nexport const useAppSelector = useSelector.withTypes<RootState>();\nexport const useAppStore = useStore.withTypes<AppStore>();\n"],"names":[],"mappings":"AAAA,4EAA4E;;;;;;AAC5E;;AAIO,MAAM,iBAAiB,yJAAA,CAAA,cAAW,CAAC,SAAS;AAC5C,MAAM,iBAAiB,yJAAA,CAAA,cAAW,CAAC,SAAS;AAC5C,MAAM,cAAc,yJAAA,CAAA,WAAQ,CAAC,SAAS"}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/(dashboard)/fileupload.tsx"],"sourcesContent":["\"use client\";\n\nimport { File, PlusCircle, CloudCog } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\n\nimport {createContext, useContext, useState} from 'react';\nimport { useRouter } from 'next/navigation';\n\nimport { \n    upload,\n    selectFile,\n    selectStatus,\n } from '@/lib/features/document_ocr/document.slice'\n\nimport { useAppDispatch, useAppSelector } from \"@/lib/hooks/hooks\";\n\nexport function FileUpload() {\n\n    const dispatch = useAppDispatch();\n    const uplaodFile = useAppSelector(selectFile);\n    const status = useAppSelector(selectStatus);\n    const [incrementAmount, setIncrementAmount] = useState(\"2\");\n    const [file, setFile] = useState<any>()\n\n    let router = useRouter();\n\n    function handleChange(event: any) {\n        setFile(event.target.files[0])\n    }\n    \n    function handleSubmit() {\n        \n        console.log(\"FILE NAME :\", file?.name || \"\");\n        dispatch(upload(file));\n        router.push(`\\document_ocr`, { scroll: false });\n    }\n\n    return(\n        <div>\n            <h1>Choose Image File to Process</h1>\n            <br/>\n\n            <input type=\"file\" \n                className=\"w-3/12 text-gray-500 font-medium text-sm bg-gray-100 file:cursor-pointer cursor-pointer file:border-0 file:py-2 file:px-4 file:mr-4 file:bg-gray-800 file:hover:bg-gray-700 file:text-white rounded\"\n                onChange={handleChange} />\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-300\" id=\"file_input_help\">SVG, PNG, JPG or GIF (MAX. 800x400px).</p>\n            <br/>\n\n            <Button size=\"sm\" variant=\"outline\" className=\"h-8 gap-1\"\n                onClick={handleSubmit}>\n                <CloudCog className=\"h-4 w-4\" />\n                <span className=\"sr-only sm:not-sr-only sm:whitespace-nowrap\">\n                    Process\n                </span>\n            </Button>\n        </div>\n    )\n}"],"names":[],"mappings":";;;;AAGA;AAEA;AACA;AAEA;AAMA;AAZA;AAFA;;;;;;;;AAgBO,SAAS;IAEZ,MAAM,WAAW,CAAA,GAAA,qHAAA,CAAA,iBAAc,AAAD;IAC9B,MAAM,aAAa,CAAA,GAAA,qHAAA,CAAA,iBAAc,AAAD,EAAE,oJAAA,CAAA,aAAU;IAC5C,MAAM,SAAS,CAAA,GAAA,qHAAA,CAAA,iBAAc,AAAD,EAAE,oJAAA,CAAA,eAAY;IAC1C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAE/B,IAAI,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAErB,SAAS,aAAa,KAAU;QAC5B,QAAQ,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE;IACjC;IAEA,SAAS;QAEL,QAAQ,GAAG,CAAC,eAAe,MAAM,QAAQ;QACzC,SAAS,CAAA,GAAA,oJAAA,CAAA,SAAM,AAAD,EAAE;QAChB,OAAO,IAAI,CAAC,CAAC,aAAa,CAAC,EAAE;YAAE,QAAQ;QAAM;IACjD;IAEA,qBACI,8OAAC;;0BACG,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;;;;;0BAED,8OAAC;gBAAM,MAAK;gBACR,WAAU;gBACV,UAAU;;;;;;0BACd,8OAAC;gBAAE,WAAU;gBAAgD,IAAG;0BAAkB;;;;;;0BAClF,8OAAC;;;;;0BAED,8OAAC,2HAAA,CAAA,SAAM;gBAAC,MAAK;gBAAK,SAAQ;gBAAU,WAAU;gBAC1C,SAAS;;kCACT,8OAAC,8MAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;kCACpB,8OAAC;wBAAK,WAAU;kCAA8C;;;;;;;;;;;;;;;;;;AAM9E"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}