{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/tabs.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx <module evaluation>\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,wDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wDACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wDACA"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/tabs.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,oCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,oCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oCACA"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/api/axios.ts"],"sourcesContent":["import axios from 'axios';  \n  \nconst axiosInterceptorInstance = axios.create({\n  baseURL: process.env.API_URL,\n});  \n  \n// Request interceptor  \naxiosInterceptorInstance.interceptors.request.use(  \n  async (config) => {  \n\n    const accessToken = await generateToken();\n    config.headers.Authorization = `Bearer ${accessToken}`;\n    return config;  \n  },  \n  (error) => {  \n    // Handle request errors here  \n    return Promise.reject(error);  \n  }  \n);  \n  \n// Response interceptor  \naxiosInterceptorInstance.interceptors.response.use(  \n  (response) => {  \n    // Modify the response data here  \n    return response;  \n  },  \n  (error) => {  \n    // Handle response errors here  \n    return Promise.reject(error);  \n  }  \n);  \n\nconst generateToken = async () => {\n  const res = await axios.post(process.env.API_URL + \"/api/auth/guard-user-signin\", {\n    username: '!mlaerehtfonaidrugmaiyeh',\n    password: '2f8b199acf752364c0d9f7d893ac8e664'\n  });\n\n  return res.data.data.accessToken;\n};\n  \nexport default axiosInterceptorInstance;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,2BAA2B,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC5C,SAAS,QAAQ,GAAG,CAAC,OAAO;AAC9B;AAEA,wBAAwB;AACxB,yBAAyB,YAAY,CAAC,OAAO,CAAC,GAAG,CAC/C,OAAO;IAEL,MAAM,cAAc,MAAM;IAC1B,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,aAAa;IACtD,OAAO;AACT,GACA,CAAC;IACC,+BAA+B;IAC/B,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,yBAAyB;AACzB,yBAAyB,YAAY,CAAC,QAAQ,CAAC,GAAG,CAChD,CAAC;IACC,kCAAkC;IAClC,OAAO;AACT,GACA,CAAC;IACC,gCAAgC;IAChC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,MAAM,gBAAgB;IACpB,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,GAAG,+BAA+B;QAChF,UAAU;QACV,UAAU;IACZ;IAEA,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW;AAClC;uCAEe"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/services/unicorn_companies.ts"],"sourcesContent":["import axiosInstance from '../api/axios'; \nimport { UnicornCompanies } from '../models/unicorn_companies';\n\nexport async function getPageData(\n    pageno: number = 1\n  ) : Promise<{\n    companyList: UnicornCompanies[];\n    pageNo: number;\n    newOffset: number;\n    totalItems: number;\n  }>  {  \n  \n    let response: any, unicorn_companies: any;\n    try {  \n      response = await axiosInstance.get(\"/api/unicorncompanies/pages\", { params: { 'page[pageno]': pageno } });\n    //   console.log(\"RESPONSE >> \", response?.data);\n      unicorn_companies = parseAllObjects<UnicornCompanies>(response.data.data.data);\n    } catch (error) {  \n      // Handle the error here  \n      console.error(error);  \n    }  \n  \n    return {\n      companyList: unicorn_companies,\n      pageNo: response?.data.data.pageInfo.page,\n      newOffset: response?.data.data.pageInfo.pageSize,\n      totalItems: response?.data.data.pageInfo.totalRowCount\n    };\n  };\n\n  export async function  getAllData(){  \n    try {  \n      const response = await axiosInstance.get(\"/api/unicorncompanies\");\n      let unicorn_companies = parseAllObjects<UnicornCompanies>(response.data.data);\n      return unicorn_companies;\n    } catch (error) {  \n      // Handle the error here  \n      console.error(error);  \n    }  \n  };\n  \n  function parseAllObjects<T>(json: any): T[] | null {\n    try {\n      const jsonString = JSON.stringify(json);\n      return JSON.parse(jsonString) as T[];\n    } catch (error) {\n      console.error(\"Error parsing JSON:\", error);\n      return null;\n    }\n  }\n  "],"names":[],"mappings":";;;;AAAA;;AAGO,eAAe,YAClB,SAAiB,CAAC;IAQlB,IAAI,UAAe;IACnB,IAAI;QACF,WAAW,MAAM,mHAAA,CAAA,UAAa,CAAC,GAAG,CAAC,+BAA+B;YAAE,QAAQ;gBAAE,gBAAgB;YAAO;QAAE;QACzG,iDAAiD;QAC/C,oBAAoB,gBAAkC,SAAS,IAAI,CAAC,IAAI,CAAC,IAAI;IAC/E,EAAE,OAAO,OAAO;QACd,0BAA0B;QAC1B,QAAQ,KAAK,CAAC;IAChB;IAEA,OAAO;QACL,aAAa;QACb,QAAQ,UAAU,KAAK,KAAK,SAAS;QACrC,WAAW,UAAU,KAAK,KAAK,SAAS;QACxC,YAAY,UAAU,KAAK,KAAK,SAAS;IAC3C;AACF;AAEO,eAAgB;IACrB,IAAI;QACF,MAAM,WAAW,MAAM,mHAAA,CAAA,UAAa,CAAC,GAAG,CAAC;QACzC,IAAI,oBAAoB,gBAAkC,SAAS,IAAI,CAAC,IAAI;QAC5E,OAAO;IACT,EAAE,OAAO,OAAO;QACd,0BAA0B;QAC1B,QAAQ,KAAK,CAAC;IAChB;AACF;AAEA,SAAS,gBAAmB,IAAS;IACnC,IAAI;QACF,MAAM,aAAa,KAAK,SAAS,CAAC;QAClC,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO;IACT;AACF"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/pages/(home)/companies-table.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CompaniesTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call CompaniesTable() from the server but CompaniesTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/pages/(home)/companies-table.tsx <module evaluation>\",\n    \"CompaniesTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,sEACA"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/pages/(home)/companies-table.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CompaniesTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call CompaniesTable() from the server but CompaniesTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/pages/(home)/companies-table.tsx\",\n    \"CompaniesTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,kDACA"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/.next-internal/server/app/pages/(dashboard)/page/actions.js"],"sourcesContent":["__turbopack_export_value__({\n});"],"names":[],"mappings":"AAAA,2BAA2B,CAC3B"}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}