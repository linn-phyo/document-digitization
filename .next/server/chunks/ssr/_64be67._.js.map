{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/tabs.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx <module evaluation>\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,wDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wDACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wDACA"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/tabs.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/tabs.tsx\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,oCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,oCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oCACA"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/(dashboard)/products-table.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ProductsTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProductsTable() from the server but ProductsTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(dashboard)/products-table.tsx <module evaluation>\",\n    \"ProductsTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,oEACA"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/(dashboard)/products-table.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ProductsTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProductsTable() from the server but ProductsTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(dashboard)/products-table.tsx\",\n    \"ProductsTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gDACA"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/db.ts"],"sourcesContent":["import 'server-only';\n\nimport { neon } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-http';\nimport {\n  pgTable,\n  text,\n  numeric,\n  integer,\n  timestamp,\n  pgEnum,\n  serial\n} from 'drizzle-orm/pg-core';\nimport { count, eq, ilike } from 'drizzle-orm';\nimport { createInsertSchema } from 'drizzle-zod';\n\nexport const db = drizzle(neon(process.env.POSTGRES_URL!));\n\nexport const statusEnum = pgEnum('status', ['active', 'inactive', 'archived']);\n\nexport const products = pgTable('products', {\n  id: serial('id').primaryKey(),\n  imageUrl: text('image_url').notNull(),\n  name: text('name').notNull(),\n  status: statusEnum('status').notNull(),\n  price: numeric('price', { precision: 10, scale: 2 }).notNull(),\n  stock: integer('stock').notNull(),\n  availableAt: timestamp('available_at').notNull()\n});\n\nexport type SelectProduct = typeof products.$inferSelect;\nexport const insertProductSchema = createInsertSchema(products);\n\nexport async function getProducts(\n  search: string,\n  offset: number\n): Promise<{\n  products: SelectProduct[];\n  newOffset: number | null;\n  totalProducts: number;\n}> {\n  // Always search the full table, not per page\n  if (search) {\n    return {\n      products: await db\n        .select()\n        .from(products)\n        .where(ilike(products.name, `%${search}%`))\n        .limit(1000),\n      newOffset: null,\n      totalProducts: 0\n    };\n  }\n\n  if (offset === null) {\n    return { products: [], newOffset: null, totalProducts: 0 };\n  }\n\n  let totalProducts = await db.select({ count: count() }).from(products);\n  let moreProducts = await db.select().from(products).limit(5).offset(offset);\n  let newOffset = moreProducts.length >= 5 ? offset + 5 : null;\n\n  return {\n    products: moreProducts,\n    newOffset,\n    totalProducts: totalProducts[0].count\n  };\n}\n\nexport async function deleteProductById(id: number) {\n  await db.delete(products).where(eq(products.id, id));\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;AAEA;AAYA;AAXA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;;;;;;;AAGO,MAAM,KAAK,CAAA,GAAA,wJAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sJAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,GAAG,CAAC,YAAY;AAEhD,MAAM,aAAa,CAAA,GAAA,+JAAA,CAAA,SAAM,AAAD,EAAE,UAAU;IAAC;IAAU;IAAY;CAAW;AAEtE,MAAM,WAAW,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD,EAAE,YAAY;IAC1C,IAAI,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,UAAU;IAC3B,UAAU,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,aAAa,OAAO;IACnC,MAAM,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,OAAO;IAC1B,QAAQ,WAAW,UAAU,OAAO;IACpC,OAAO,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,SAAS;QAAE,WAAW;QAAI,OAAO;IAAE,GAAG,OAAO;IAC5D,OAAO,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,SAAS,OAAO;IAC/B,aAAa,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,gBAAgB,OAAO;AAChD;AAGO,MAAM,sBAAsB,CAAA,GAAA,wIAAA,CAAA,qBAAkB,AAAD,EAAE;AAE/C,eAAe,YACpB,MAAc,EACd,MAAc;IAMd,6CAA6C;IAC7C,IAAI,QAAQ;QACV,OAAO;YACL,UAAU,MAAM,GACb,MAAM,GACN,IAAI,CAAC,UACL,KAAK,CAAC,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,SAAS,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GACxC,KAAK,CAAC;YACT,WAAW;YACX,eAAe;QACjB;IACF;IAEA,IAAI,WAAW,MAAM;QACnB,OAAO;YAAE,UAAU,EAAE;YAAE,WAAW;YAAM,eAAe;QAAE;IAC3D;IAEA,IAAI,gBAAgB,MAAM,GAAG,MAAM,CAAC;QAAE,OAAO,CAAA,GAAA,+JAAA,CAAA,QAAK,AAAD;IAAI,GAAG,IAAI,CAAC;IAC7D,IAAI,eAAe,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,UAAU,KAAK,CAAC,GAAG,MAAM,CAAC;IACpE,IAAI,YAAY,aAAa,MAAM,IAAI,IAAI,SAAS,IAAI;IAExD,OAAO;QACL,UAAU;QACV;QACA,eAAe,aAAa,CAAC,EAAE,CAAC,KAAK;IACvC;AACF;AAEO,eAAe,kBAAkB,EAAU;IAChD,MAAM,GAAG,MAAM,CAAC,UAAU,KAAK,CAAC,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,SAAS,EAAE,EAAE;AAClD"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/(dashboard)/page.tsx"],"sourcesContent":["import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { File, PlusCircle } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { ProductsTable } from './products-table';\nimport { getProducts } from '@/lib/db';\n\nexport default async function ProductsPage(\n  props: {\n    searchParams: Promise<{ q: string; offset: string }>;\n  }\n) {\n  const searchParams = await props.searchParams;\n  const search = searchParams.q ?? '';\n  const offset = searchParams.offset ?? 0;\n  const { products, newOffset, totalProducts } = await getProducts(\n    search,\n    Number(offset)\n  );\n\n  return (\n    <Tabs defaultValue=\"all\">\n      <div className=\"flex items-center\">\n        <TabsList>\n          <TabsTrigger value=\"all\">All</TabsTrigger>\n          <TabsTrigger value=\"active\">Active</TabsTrigger>\n          <TabsTrigger value=\"draft\">Draft</TabsTrigger>\n          <TabsTrigger value=\"archived\" className=\"hidden sm:flex\">\n            Archived\n          </TabsTrigger>\n        </TabsList>\n        <div className=\"ml-auto flex items-center gap-2\">\n          <Button size=\"sm\" variant=\"outline\" className=\"h-8 gap-1\">\n            <File className=\"h-3.5 w-3.5\" />\n            <span className=\"sr-only sm:not-sr-only sm:whitespace-nowrap\">\n              Export\n            </span>\n          </Button>\n          <Button size=\"sm\" className=\"h-8 gap-1\">\n            <PlusCircle className=\"h-3.5 w-3.5\" />\n            <span className=\"sr-only sm:not-sr-only sm:whitespace-nowrap\">\n              Add Product\n            </span>\n          </Button>\n        </div>\n      </div>\n      <TabsContent value=\"all\">\n        <ProductsTable\n          products={products}\n          offset={newOffset ?? 0}\n          totalProducts={totalProducts}\n        />\n      </TabsContent>\n    </Tabs>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;AAHA;AAAA;;;;;;;AAKe,eAAe,aAC5B,KAEC;IAED,MAAM,eAAe,MAAM,MAAM,YAAY;IAC7C,MAAM,SAAS,aAAa,CAAC,IAAI;IACjC,MAAM,SAAS,aAAa,MAAM,IAAI;IACtC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,EAAE,GAAG,MAAM,CAAA,GAAA,yGAAA,CAAA,cAAW,AAAD,EAC7D,QACA,OAAO;IAGT,qBACE,8OAAC,yHAAA,CAAA,OAAI;QAAC,cAAa;;0BACjB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,yHAAA,CAAA,WAAQ;;0CACP,8OAAC,yHAAA,CAAA,cAAW;gCAAC,OAAM;0CAAM;;;;;;0CACzB,8OAAC,yHAAA,CAAA,cAAW;gCAAC,OAAM;0CAAS;;;;;;0CAC5B,8OAAC,yHAAA,CAAA,cAAW;gCAAC,OAAM;0CAAQ;;;;;;0CAC3B,8OAAC,yHAAA,CAAA,cAAW;gCAAC,OAAM;gCAAW,WAAU;0CAAiB;;;;;;;;;;;;kCAI3D,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,2HAAA,CAAA,SAAM;gCAAC,MAAK;gCAAK,SAAQ;gCAAU,WAAU;;kDAC5C,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,8OAAC;wCAAK,WAAU;kDAA8C;;;;;;;;;;;;0CAIhE,8OAAC,2HAAA,CAAA,SAAM;gCAAC,MAAK;gCAAK,WAAU;;kDAC1B,8OAAC,kNAAA,CAAA,aAAU;wCAAC,WAAU;;;;;;kDACtB,8OAAC;wCAAK,WAAU;kDAA8C;;;;;;;;;;;;;;;;;;;;;;;;0BAMpE,8OAAC,yHAAA,CAAA,cAAW;gBAAC,OAAM;0BACjB,cAAA,8OAAC,0IAAA,CAAA,gBAAa;oBACZ,UAAU;oBACV,QAAQ,aAAa;oBACrB,eAAe;;;;;;;;;;;;;;;;;AAKzB"}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/(dashboard)/actions.ts"],"sourcesContent":["'use server';\n\nimport { deleteProductById } from '@/lib/db';\nimport { revalidatePath } from 'next/cache';\n\nexport async function deleteProduct(formData: FormData) {\n  // let id = Number(formData.get('id'));\n  // await deleteProductById(id);\n  // revalidatePath('/');\n}\n"],"names":[],"mappings":";;;;;;;;AAKO,eAAe,cAAc,QAAkB;AACpD,uCAAuC;AACvC,+BAA+B;AAC/B,uBAAuB;AACzB;;;IAJsB;;AAAA,+OAAA"}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/.next-internal/server/app/(dashboard)/page/actions.js"],"sourcesContent":["__turbopack_export_value__({\n  '08ceb7d03278be3aa105a0693bd55aa523656734': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['deleteProduct'])(...args)),\n  '63e3e1bec20618b37154a151abea622ac17b4663': (...args) => Promise.resolve(require('ACTIONS_MODULE1')).then(mod => (0, mod['$$RSC_SERVER_ACTION_0'])(...args)),\n});"],"names":[],"mappings":"AAAA,2BAA2B;IACzB,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,uFAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,gBAAgB,KAAK;IAC9I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,qFAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,wBAAwB,KAAK;AACxJ"}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}