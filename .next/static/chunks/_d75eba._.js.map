{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/utils/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function ParseAllObjects<T>(json: any): T[] | null {\n  try {\n    const jsonString = JSON.stringify(json);\n    return JSON.parse(jsonString) as T[];\n  } catch (error) {\n    console.error(\"Error parsing JSON:\", error);\n    return null!;\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,gBAAmB,IAAS;IAC1C,IAAI;QACF,MAAM,aAAa,KAAK,SAAS,CAAC;QAClC,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO;IACT;AACF;KARgB"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,kBAAkB,uKAAiB,QAAQ;AAEjD,MAAM,UAAU,uKAAiB,IAAI;AAErC,MAAM,iBAAiB,uKAAiB,OAAO;AAE/C,MAAM,+BAAiB,8JAAM,UAAU,MAGrC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,6LAAC,uKAAiB,OAAO;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EACV,sYACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,uKAAiB,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/nav-item.tsx"],"sourcesContent":["'use client';\n\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipTrigger\n} from '@/components/ui/tooltip';\nimport clsx from 'clsx';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\n\nexport function NavItem({\n  href,\n  label,\n  children\n}: {\n  href: string;\n  label: string;\n  children: React.ReactNode;\n}) {\n  const pathname = usePathname();\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>\n        <Link\n          href={href}\n          className={clsx(\n            'flex h-9 w-9 items-center justify-center rounded-lg text-muted-foreground transition-colors hover:text-foreground md:h-8 md:w-8',\n            {\n              'bg-accent text-black': pathname === href\n            }\n          )}\n        >\n          {children}\n          <span className=\"sr-only\">{label}</span>\n        </Link>\n      </TooltipTrigger>\n      <TooltipContent side=\"right\">{label}</TooltipContent>\n    </Tooltip>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAKA;AACA;AACA;;;AATA;;;;;AAWO,SAAS,QAAQ,EACtB,IAAI,EACJ,KAAK,EACL,QAAQ,EAKT;;IACC,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE3B,qBACE,6LAAC,+HAAA,CAAA,UAAO;;0BACN,6LAAC,+HAAA,CAAA,iBAAc;gBAAC,OAAO;0BACrB,cAAA,6LAAC,+HAAA,CAAA,UAAI;oBACH,MAAM;oBACN,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACZ,mIACA;wBACE,wBAAwB,aAAa;oBACvC;;wBAGD;sCACD,6LAAC;4BAAK,WAAU;sCAAW;;;;;;;;;;;;;;;;;0BAG/B,6LAAC,+HAAA,CAAA,iBAAc;gBAAC,MAAK;0BAAS;;;;;;;;;;;;AAGpC;GA9BgB;;QASG,qIAAA,CAAA,cAAW;;;KATd"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/provider/providers.tsx"],"sourcesContent":["'use client';\n\nimport { TooltipProvider } from '@/components/ui/tooltip';\n\nexport default function Providers({ children }: { children: React.ReactNode }) {\n  return <TooltipProvider>{children}</TooltipProvider>;\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS,UAAU,EAAE,QAAQ,EAAiC;IAC3E,qBAAO,6LAAC,+HAAA,CAAA,kBAAe;kBAAE;;;;;;AAC3B;KAFwB"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/app.slice.ts"],"sourcesContent":["import { asyncThunkCreator, buildCreateSlice } from \"@reduxjs/toolkit\";\n\n// `buildCreateSlice` allows us to create a slice with async thunks.\nexport const createAppSlice = buildCreateSlice({\n  creators: { asyncThunk: asyncThunkCreator },\n});\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,iBAAiB,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EAAE;IAC7C,UAAU;QAAE,YAAY,8LAAA,CAAA,oBAAiB;IAAC;AAC5C"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/features/document_ocr/document.slice.ts"],"sourcesContent":["import { createAppSlice } from \"@/lib/app.slice\";\nimport type { AppThunk } from \"@/lib/store\";\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\n\nimport DataInvoice from \"@/lib/data/documents.json\"\n\nconst dataInvoice = DataInvoice;\n\nexport interface DocumentOCRState {\n  file: any;\n  filename: \"\";\n  data: any;\n}\n\nconst initialState: DocumentOCRState = {\n  file: null,\n  filename: \"\",\n  data: null,\n};\n\n// If you are not using async thunks you can use the standalone `createSlice`.\nexport const documentSlice = createAppSlice({\n  name: \"document\",\n  // `createSlice` will infer the state type from the `initialState` argument\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: (create) => ({\n    upload: (state, action: PayloadAction< { file: any; filename: \"\" } >) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n\n      const { file, filename } = action.payload;\n      state.file = file;\n      state.filename = filename;\n\n      state.data = dataInvoice.find(item => {\n        return item.filename == filename\n       });\n      \n    },\n  }),\n  // You can define your selectors here. These selectors receive the slice\n  // state as their first argument.\n  selectors: {\n    selectFile: (document) => document.file,\n    selectFileName: (document) => document.filename,\n    selectData: (document) => document.data,\n  },\n});\n\n// export const upload = createAction< { file: any; filename: string; status: string } >('upload');\n\n// Action creators are generated for each case reducer function.\nexport const { upload } = documentSlice.actions;\n\n// Selectors returned by `slice.selectors` take the root state as their first argument.\nexport const { selectFile, selectFileName, selectData } = documentSlice.selectors;"],"names":[],"mappings":";;;;;;;AAAA;AAIA;;;AAEA,MAAM,cAAc,gGAAA,CAAA,UAAW;AAQ/B,MAAM,eAAiC;IACrC,MAAM;IACN,UAAU;IACV,MAAM;AACR;AAGO,MAAM,gBAAgB,CAAA,GAAA,sHAAA,CAAA,iBAAc,AAAD,EAAE;IAC1C,MAAM;IACN,2EAA2E;IAC3E;IACA,+EAA+E;IAC/E,UAAU,CAAC,SAAW,CAAC;YACrB,QAAQ,CAAC,OAAO;gBACd,oEAAoE;gBACpE,uEAAuE;gBACvE,oEAAoE;gBACpE,0CAA0C;gBAE1C,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,OAAO,OAAO;gBACzC,MAAM,IAAI,GAAG;gBACb,MAAM,QAAQ,GAAG;gBAEjB,MAAM,IAAI,GAAG,YAAY,IAAI,CAAC,CAAA;oBAC5B,OAAO,KAAK,QAAQ,IAAI;gBACzB;YAEH;QACF,CAAC;IACD,wEAAwE;IACxE,iCAAiC;IACjC,WAAW;QACT,YAAY,CAAC,WAAa,SAAS,IAAI;QACvC,gBAAgB,CAAC,WAAa,SAAS,QAAQ;QAC/C,YAAY,CAAC,WAAa,SAAS,IAAI;IACzC;AACF;AAKO,MAAM,EAAE,MAAM,EAAE,GAAG,cAAc,OAAO;AAGxC,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,UAAU,EAAE,GAAG,cAAc,SAAS"}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/store.ts"],"sourcesContent":["import type { Action, ThunkAction } from \"@reduxjs/toolkit\";\nimport { combineSlices, configureStore } from \"@reduxjs/toolkit\";\nimport { documentSlice } from \"./features/document_ocr/document.slice\";\n\n// `combineSlices` automatically combines the reducers using\n// their `reducerPath`s, therefore we no longer need to call `combineReducers`.\nconst rootReducer = combineSlices(documentSlice);\n// Infer the `RootState` type from the root reducer\nexport type RootState = ReturnType<typeof rootReducer>;\n\n// `makeStore` encapsulates the store configuration to allow\n// creating unique store instances, which is particularly important for\n// server-side rendering (SSR) scenarios. In SSR, separate store instances\n// are needed for each request to prevent cross-request state pollution.\nexport const makeStore = () => {\n  return configureStore({\n    reducer: rootReducer,   \n    // Adding the api middleware enables caching, invalidation, polling,\n    // and other useful features of `rtk-query`.\n    middleware: (getDefaultMiddleware) => {\n      return getDefaultMiddleware();\n    },\n  });\n};\n\n// Infer the return type of `makeStore`\nexport type AppStore = ReturnType<typeof makeStore>;\n// Infer the `AppDispatch` type from the store itself\nexport type AppDispatch = AppStore[\"dispatch\"];\nexport type AppThunk<ThunkReturnType = void> = ThunkAction<\n  ThunkReturnType,\n  RootState,\n  unknown,\n  Action\n>;\n"],"names":[],"mappings":";;;AAEA;AADA;;;AAGA,4DAA4D;AAC5D,+EAA+E;AAC/E,MAAM,cAAc,CAAA,GAAA,8LAAA,CAAA,gBAAa,AAAD,EAAE,uJAAA,CAAA,gBAAa;AAQxC,MAAM,YAAY;IACvB,OAAO,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;QACpB,SAAS;QACT,oEAAoE;QACpE,4CAA4C;QAC5C,YAAY,CAAC;YACX,OAAO;QACT;IACF;AACF"}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/provider/store-provider.tsx"],"sourcesContent":["\"use client\";\nimport type { AppStore } from \"@/lib/store\";\nimport { makeStore } from \"@/lib/store\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\nimport type { ReactNode } from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { Provider } from \"react-redux\";\n\ninterface Props {\n  readonly children: ReactNode;\n}\n\nexport const StoreProvider = ({ children }: Props) => {\n  const storeRef = useRef<AppStore | null>(null);\n\n  if (!storeRef.current) {\n    // Create the store instance the first time this renders\n    storeRef.current = makeStore();\n  }\n\n  useEffect(() => {\n    if (storeRef.current != null) {\n      // configure listeners using the provided defaults\n      // optional, but required for `refetchOnFocus`/`refetchOnReconnect` behaviors\n      const unsubscribe = setupListeners(storeRef.current.dispatch);\n      return unsubscribe;\n    }\n  }, []);\n\n  return <Provider store={storeRef.current}>{children}</Provider>;\n};\n"],"names":[],"mappings":";;;;AAEA;AAGA;AAFA;AAGA;;;AANA;;;;;AAYO,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAAS;;IAC/C,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAmB;IAEzC,IAAI,CAAC,SAAS,OAAO,EAAE;QACrB,wDAAwD;QACxD,SAAS,OAAO,GAAG,CAAA,GAAA,+GAAA,CAAA,YAAS,AAAD;IAC7B;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,SAAS,OAAO,IAAI,MAAM;YAC5B,kDAAkD;YAClD,6EAA6E;YAC7E,MAAM,cAAc,CAAA,GAAA,mLAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,OAAO,CAAC,QAAQ;YAC5D,OAAO;QACT;IACF,GAAG,EAAE;IAEL,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,SAAS,OAAO;kBAAG;;;;;;AAC7C;GAlBa;KAAA"}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}